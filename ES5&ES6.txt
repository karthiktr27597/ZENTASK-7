Comparison between ES5 and ES6


Definition

1. ES5 is the fifth edition of the ECMAScript (a trademarked scripting language specification defined by ECMA International)

2. ES6 is the sixth edition of the ECMAScript (a trademarked scripting language specification defined by ECMA International).

Release

ES5 - 	It was introduced in 2009.
ES6 - It was introduced in 2015.

Data-types

ES5 - ES5 supports primitive data types that are string, number, boolean, null, and undefined.
ES6 - In ES6, there are some additions to JavaScript data types. It introduced a new primitive data type 'symbol' for supporting unique values.

Defining Variables

ES5 - In ES5, we could only define the variables by using the var keyword.
ES6 - In ES6, there are two new ways to define variables that are let and const.

Performance

ES5 - As ES5 is prior to ES6, there is a non-presence of some features, so it has a lower performance than ES6.
ES6 - Because of new features and the shorthand storage implementation ES6 has a higher performance than ES5.


Support

ES5 - A wide range of communities supports it.
ES6 - It also has a lot of community support, but it is lesser than ES5.

Object Manipulation

ES5 - ES5 is time-consuming than ES6.
ES6 - Due to destructuring and speed operators, object manipulation can be processed more smoothly in ES6.

Arrow Functions

ES5 - In ES5, both function and return keywords are used to define a function.
ES6 - An arrow function is a new feature introduced in ES6 by which we don't require the function keyword to define the function.

Loops

ES5 - 	In ES5, there is a use of for loop to iterate over elements.
ES6 - ES6 introduced the concept of for...of loop to perform an iteration over the values of the iterable objects.

And Spread operators and Template Literal were introduced in ES6.

